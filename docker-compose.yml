version: '3'

networks:
  test:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: test_nginx
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - test

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: test_php
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - test
  mysql:
    image: mysql:5.7.29
    command: mysqld --sql_mode=""
    container_name: test_mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: test
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret456
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - test
    volumes:
      - ./sql_scripts:/docker-entrypoint-initdb.d
      - ./mysql:/var/lib/mysql

  composer:
    image: composer:latest
    user: "1000:1000"
    container_name: test_composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - test

  npm:
    image: node:16
    container_name: test_npm
    user: "1000:1000"
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: test_artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - test

  redis:
    image: redis:4.0
    container_name: test_redis
    ports:
      - "6379:6379"
    networks:
      - test
